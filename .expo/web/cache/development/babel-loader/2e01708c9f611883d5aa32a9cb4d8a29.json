{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getRoomDetailsApi, getRoomsApi } from \"../navigation/api/stanna\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport Header from \"../components/RoomDetails/Header\";\nimport Services from \"../components/RoomDetails/Services\";\nimport Information from \"../components/RoomDetails/Information\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RoomDetail(props) {\n  var navigation = props.navigation,\n      params = props.route.params;\n\n  var _useState = useState(params),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth;\n\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return null;\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(Icon, {\n          name: \"angle-left\",\n          color: \"black\",\n          size: 30,\n          style: {\n            marginLeft: 20\n          },\n          onPress: navigation.goBack\n        });\n      }\n    });\n  }, [navigation, params]);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Header, {\n      name: room.nombre,\n      image: room.imagen,\n      ranking: room.ranking,\n      type: room.tipo,\n      price: room.precio\n    }), _jsx(Services, {\n      services: room.servicios\n    }), _jsx(Information, {\n      description: room.descripcion,\n      information: room.informacion\n    }), _jsx(View, {\n      children: _jsx(SelectRoomIf, {\n        isAuth: auth,\n        room: room\n      })\n    })]\n  });\n}\n\nfunction SelectRoomIf(props) {\n  var navigate = useNavigation();\n  var isAuth = props.isAuth;\n  var room = props.room;\n\n  var goToLogin = function goToLogin() {\n    navigate.navigate('Account');\n  };\n\n  var goToBookingDetails = function goToBookingDetails() {\n    navigate.navigate('BookingDetail', {\n      id: room.id,\n      nombre: room.nombre,\n      tipo: room.tipo,\n      imagen: room.imagen,\n      precio: room.precio,\n      ranking: room.ranking,\n      descripcion: room.descripcion,\n      servicios: room.servicios,\n      informacion: room.informacion,\n      fechaEntrada: room.fechaEntrada,\n      fechaSalida: room.fechaSalida,\n      adults: room.adults,\n      childrens: room.childrens\n    });\n  };\n\n  if (isAuth) {\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: goToBookingDetails,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.textButton,\n          children: \"Seleccionar habitaci\\xF3n\"\n        })\n      })\n    });\n  } else {\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: goToLogin,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.textButton,\n          children: \"Iniciar sesi\\xF3n\"\n        })\n      })\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#18395e\",\n    borderRadius: 15,\n    width: 150,\n    height: 35,\n    marginHorizontal: \"35%\",\n    marginTop: 15\n  },\n  textButton: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\",\n    margin: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/screens/RoomDetail.js"],"names":["React","useState","useEffect","getRoomDetailsApi","getRoomsApi","Icon","Header","Services","Information","useAuth","useNavigation","RoomDetail","props","navigation","params","route","room","setRoom","auth","setOptions","headerRight","headerLeft","marginLeft","goBack","nombre","imagen","ranking","tipo","precio","servicios","descripcion","informacion","SelectRoomIf","navigate","isAuth","goToLogin","goToBookingDetails","id","fechaEntrada","fechaSalida","adults","childrens","styles","button","textButton","StyleSheet","create","backgroundColor","borderRadius","width","height","marginHorizontal","marginTop","color","textAlign","textAlignVertical","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Image, ScrollView, StyleSheet, Text, TouchableWithoutFeedback, View} from \"react-native\";\r\nimport {getRoomDetailsApi, getRoomsApi} from \"../navigation/api/stanna\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\"\r\n\r\nimport Header from \"../components/RoomDetails/Header\"\r\nimport Services from \"../components/RoomDetails/Services\";\r\nimport Information from \"../components/RoomDetails/Information\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\n\r\nexport default function RoomDetail(props) {\r\n    const {\r\n        navigation,\r\n        route: {params},\r\n    } = props;\r\n    // console.log(params)\r\n    // revisar\r\n    const [room, setRoom] = useState(params);\r\n\r\n    const {auth} = useAuth()\r\n\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         try{\r\n    //             const response = await getRoomDetailsApi(params.id);\r\n    //             setRoom({response})\r\n    //         } catch (e) {\r\n    //             console.error(e)\r\n    //             navigation.goBack()\r\n    //         }\r\n    //     })();\r\n    //     console.log(room)\r\n    // }, [params]);\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => null,\r\n            headerLeft: () => (\r\n                <Icon\r\n                    name=\"angle-left\"\r\n                    color=\"black\"\r\n                    size={30}\r\n                    style={{marginLeft: 20}}\r\n                    onPress={navigation.goBack}\r\n                />\r\n            ),\r\n        });\r\n    }, [navigation, params])\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Header name={room.nombre} image={room.imagen} ranking={room.ranking} type={room.tipo} price={room.precio}/>\r\n            <Services services={room.servicios}/>\r\n            <Information description={room.descripcion} information={room.informacion}/>\r\n            <View>\r\n                <SelectRoomIf isAuth={auth} room={room}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nfunction SelectRoomIf(props) {\r\n    const navigate = useNavigation();\r\n    const isAuth = props.isAuth;\r\n    const room = props.room\r\n    const goToLogin = () => {\r\n        navigate.navigate('Account')\r\n    }\r\n    const goToBookingDetails = () => {\r\n        navigate.navigate('BookingDetail', {\r\n            id: room.id,\r\n            nombre: room.nombre,\r\n            tipo: room.tipo,\r\n            imagen: room.imagen,\r\n            precio: room.precio,\r\n            ranking: room.ranking,\r\n            descripcion: room.descripcion,\r\n            servicios: room.servicios,\r\n            informacion: room.informacion,\r\n            fechaEntrada: room.fechaEntrada,\r\n            fechaSalida: room.fechaSalida,\r\n            adults: room.adults,\r\n            childrens: room.childrens\r\n        })\r\n    }\r\n    // console.log(isAuth)\r\n    // console.log(room)\r\n    if (isAuth) {\r\n        return (\r\n            <TouchableWithoutFeedback onPress={goToBookingDetails}>\r\n                <View style={styles.button}>\r\n                    <Text style={styles.textButton}>Seleccionar habitación</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    } else {\r\n        return (\r\n            <TouchableWithoutFeedback onPress={goToLogin}>\r\n                <View style={styles.button}>\r\n                    <Text style={styles.textButton}>Iniciar sesión</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        backgroundColor: \"#18395e\",\r\n        borderRadius: 15,\r\n        width: 150,\r\n        height: 35,\r\n        marginHorizontal: \"35%\",\r\n        marginTop: 15\r\n    },\r\n    textButton: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontWeight: \"bold\",\r\n        margin: 7\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}