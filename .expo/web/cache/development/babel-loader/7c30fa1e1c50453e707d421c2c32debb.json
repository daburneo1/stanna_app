{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport DatePicker from '@react-native-community/datetimepicker';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport InputSpinner from \"react-native-input-spinner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RoomFilter(props) {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date2 = _useState4[0],\n      setDate2 = _useState4[1];\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState('date2'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mode2 = _useState8[0],\n      setMode2 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      show2 = _useState12[0],\n      setShow2 = _useState12[1];\n\n  var _useState13 = useState('Ingrese una fecha'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      text = _useState14[0],\n      setText = _useState14[1];\n\n  var _useState15 = useState('Ingrese una fecha'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      text2 = _useState16[0],\n      setText2 = _useState16[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var fDate = tempDate.getFullYear() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getDate();\n    setText(fDate);\n    props.setFecha1(fDate);\n    console.log(\"text1\", fDate);\n  };\n\n  var onChange2 = function onChange2(event2, selectedDate2) {\n    var currentDate2 = selectedDate2 || date2;\n    setShow2(Platform.OS === 'ios');\n    setDate2(currentDate2);\n    var tempDate2 = new Date(currentDate2);\n    var fDate2 = tempDate2.getFullYear() + '/' + (tempDate2.getMonth() + 1) + '/' + tempDate2.getDate();\n    setText2(fDate2);\n    props.setFecha2(fDate2);\n    console.log(\"text2\", fDate2);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showMode2 = function showMode2(currentMode2) {\n    setShow2(true);\n    setMode2(currentMode2);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.filterListContainer,\n      children: [_jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: {\n            margin: 10,\n            marginHorizontal: 20\n          },\n          children: [_jsx(Text, {\n            style: styles.dateHeader,\n            children: \"Fecha de Ingreso\"\n          }), _jsx(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              return showMode('date');\n            },\n            children: _jsx(View, {\n              style: styles.card,\n              children: _jsx(View, {\n                style: styles.spacing,\n                children: _jsx(View, {\n                  style: styles.bgStyles,\n                  children: _jsxs(Text, {\n                    style: styles.dateText,\n                    children: [_jsx(Icon, {\n                      name: \"calendar\"\n                    }), \"   \", text]\n                  })\n                })\n              })\n            })\n          }), show && _jsx(DatePicker, {\n            testID: \"datePicker\",\n            value: date,\n            mode: mode,\n            display: \"default\",\n            onChange: onChange,\n            onConfirm: function onConfirm(date) {\n              setOpen(false);\n              setDate(date);\n            },\n            onCancel: function onCancel() {\n              setOpen(false);\n            }\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: {\n            margin: 5,\n            marginHorizontal: 20\n          },\n          children: [_jsx(Text, {\n            style: styles.dateHeader,\n            children: \"Fecha de Salida\"\n          }), _jsx(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              return showMode2('date2');\n            },\n            children: _jsx(View, {\n              style: styles.card,\n              children: _jsx(View, {\n                style: styles.spacing,\n                children: _jsx(View, {\n                  style: styles.bgStyles,\n                  children: _jsxs(Text, {\n                    style: styles.dateText,\n                    children: [_jsx(Icon, {\n                      name: \"calendar\"\n                    }), \"   \", text2]\n                  })\n                })\n              })\n            })\n          }), show2 && _jsx(DatePicker, {\n            testID: \"datePicker2\",\n            value: date2,\n            mode: mode2,\n            display: \"default\",\n            onChange: onChange2,\n            onConfirm: function onConfirm(date2) {\n              setOpen(false);\n              setDate2(date2);\n            },\n            onCancel: function onCancel() {\n              setOpen(false);\n            }\n          })]\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  filterListContainer: {\n    flexDirection: \"row\",\n    paddingHorizontal: 10\n  },\n  card: {\n    height: 35,\n    width: 140\n  },\n  spacing: {},\n  bgStyles: {\n    borderRadius: 5,\n    backgroundColor: \"#F5F5F5\"\n  },\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: \"center\"\n  },\n  dateHeader: {\n    marginBottom: 5,\n    color: \"#18395e\",\n    fontWeight: \"bold\"\n  },\n  dateText: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/components/RoomFilter.js"],"names":["React","useState","DatePicker","Icon","InputSpinner","RoomFilter","props","Date","date","setDate","date2","setDate2","mode","setMode","mode2","setMode2","show","setShow","show2","setShow2","text","setText","text2","setText2","onChange","event","selectedDate","currentDate","Platform","OS","tempDate","fDate","getFullYear","getMonth","getDate","setFecha1","console","log","onChange2","event2","selectedDate2","currentDate2","tempDate2","fDate2","setFecha2","showMode","currentMode","showMode2","currentMode2","styles","filterListContainer","container","margin","marginHorizontal","dateHeader","card","spacing","bgStyles","dateText","setOpen","StyleSheet","create","flexDirection","paddingHorizontal","height","width","borderRadius","backgroundColor","alignItems","justifyContent","marginBottom","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from \"react\";\r\nimport {View, Text, StyleSheet, Button, Platform, StatusBar, TouchableWithoutFeedback} from \"react-native\";\r\nimport DatePicker from '@react-native-community/datetimepicker';\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport InputSpinner from \"react-native-input-spinner\";\r\n\r\nexport default function RoomFilter (props) {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [date2, setDate2] = useState(new Date());\r\n    const [mode, setMode] = useState('date');\r\n    const [mode2, setMode2] = useState('date2');\r\n    const [show, setShow] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const [text, setText] = useState('Ingrese una fecha');\r\n    const [text2, setText2] = useState('Ingrese una fecha');\r\n\r\n    const onChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(Platform.OS === 'ios');\r\n        setDate(currentDate);\r\n\r\n        let tempDate = new Date (currentDate);\r\n        let fDate = tempDate.getFullYear() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getDate();\r\n        setText(fDate)\r\n        props.setFecha1(fDate)\r\n        console.log(\"text1\",fDate)\r\n    }\r\n\r\n    const onChange2 = (event2, selectedDate2) => {\r\n        const currentDate2 = selectedDate2 || date2;\r\n        setShow2(Platform.OS === 'ios');\r\n        setDate2(currentDate2);\r\n\r\n        let tempDate2 = new Date (currentDate2);\r\n        let fDate2 = tempDate2.getFullYear() + '/' + (tempDate2.getMonth() + 1) + '/' + tempDate2.getDate();\r\n        setText2(fDate2)\r\n        props.setFecha2(fDate2)\r\n        console.log(\"text2\",fDate2)\r\n\r\n    }\r\n\r\n    const showMode = (currentMode) => {\r\n        setShow(true)\r\n        setMode(currentMode)\r\n    }\r\n\r\n    const showMode2 = (currentMode2) => {\r\n        setShow2(true)\r\n        setMode2(currentMode2)\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <View style={styles.filterListContainer}>\r\n                <View style={styles.container}>\r\n                    <View style={{margin: 10, marginHorizontal: 20}}>\r\n                        <Text style={styles.dateHeader}>Fecha de Ingreso</Text>\r\n                        <TouchableWithoutFeedback onPress={() => showMode('date')}>\r\n                            <View style={styles.card}>\r\n                                <View style={styles.spacing}>\r\n                                    <View style={styles.bgStyles}>\r\n                                        <Text style={styles.dateText}><Icon name=\"calendar\" />   {text}</Text>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                        {/*<Button title={text} color=\"grey\" onPress={() => showMode('date')}> </Button>*/}\r\n                        {show && (\r\n                            <DatePicker\r\n                                testID='datePicker'\r\n                                value={date}\r\n                                mode={mode}\r\n                                display='default'\r\n                                onChange={onChange}\r\n                                onConfirm={(date) => {\r\n                                    setOpen(false)\r\n                                    setDate(date)\r\n                                }}\r\n                                onCancel={() => {\r\n                                    setOpen(false)\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <View style={{margin: 5, marginHorizontal: 20}}>\r\n                        <Text style={styles.dateHeader}>Fecha de Salida</Text>\r\n                        <TouchableWithoutFeedback onPress={() => showMode2('date2')}>\r\n                            <View style={styles.card}>\r\n                                <View style={styles.spacing}>\r\n                                    <View style={styles.bgStyles}>\r\n                                        <Text style={styles.dateText}><Icon name=\"calendar\" />   {text2}</Text>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                        {show2 && (\r\n                            <DatePicker\r\n                                testID='datePicker2'\r\n                                value={date2}\r\n                                mode={mode2}\r\n                                display='default'\r\n                                onChange={onChange2}\r\n                                onConfirm={(date2) => {\r\n                                    setOpen(false)\r\n                                    setDate2(date2)\r\n                                    // setFecha(date2)\r\n                                }}\r\n                                onCancel={() => {\r\n                                    setOpen(false)\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    filterListContainer:{\r\n        flexDirection: \"row\",\r\n        paddingHorizontal: 10,\r\n    },\r\n    card: {\r\n        height: 35,\r\n        width: 140\r\n    },\r\n    spacing: {\r\n        // paddingHorizontal: 30,\r\n    },\r\n    bgStyles: {\r\n        borderRadius: 5,\r\n        backgroundColor: \"#F5F5F5\",\r\n    },\r\n    container:{\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: \"center\",\r\n    },\r\n    dateHeader:{\r\n        marginBottom: 5,\r\n        color: \"#18395e\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    dateText:{\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// export default function RoomFilter (props) {\r\n//     const {textStyle} = props;\r\n//     const {date, setDate} = useState(moment());\r\n//     const {show, setShow} = useState(false)\r\n//\r\n//     const onChange = (e, selectedDate) => {\r\n//         setDate(moment(selectedDate))\r\n//\r\n//     return(\r\n//             <TouchableHighlight\r\n//                 activeOpacity={0}\r\n//                 onPress={() => console.log('open datepicker')}>\r\n//                 <View>\r\n//                     <Text style={TextStyle}>{date.format('MMMM Do, YYYY')}</Text>\r\n//\r\n//                     <Modal\r\n//                         transparent={true}\r\n//                         animationType='slide'\r\n//                         visible={show}\r\n//                         supportedOrientations={['portrait']}\r\n//                         onRequestClose={() => setShow(false)}\r\n//                     >\r\n//                         <View style={{flex: 1}}>\r\n//                             <TouchableHighlight\r\n//                                 style={{\r\n//                                     flex: 1,\r\n//                                     alignItems: 'flex-end',\r\n//                                     flexDirection: 'row'\r\n//                                 }}\r\n//                                 activeOpacity={1}\r\n//                                 visible={show}\r\n//                                 onPress={() => setShow(false)}\r\n//                             >\r\n//                                 <TouchableHighlight\r\n//                                     underlayColor={'#FFFFFF'}\r\n//                                     style={{\r\n//                                         flex: 1,\r\n//                                         borderTopColor: '#E9E9E9',\r\n//                                         borderTopWidth: 1\r\n//                                     }}\r\n//                                     onPress={() => console.log('datepicker clicked')}\r\n//                                 >\r\n//\r\n//                                     <View style={{\r\n//                                         backgroundColor: '#FFFFFF',\r\n//                                         height: 256,\r\n//                                         overflow: 'hidden'\r\n//                                     }}>\r\n//                                         <View style={{marginTop: 20}}>\r\n//                                             <DatePicker\r\n//                                                 timeZoneOffsetInMinutes={8}\r\n//                                                 value={new Date(date)}\r\n//                                                 mode='date'\r\n//                                                 minimumDate={new Date(moment().subtract('120', 'years').format('YYYY-MM-DD'))}\r\n//                                                 maximumDate={new Date(moment().format('YYYY-MM-DD'))}\r\n//                                                 onChange={onChange}\r\n//                                             >\r\n//\r\n//                                             </DatePicker>\r\n//                                         </View>\r\n//                                     </View>\r\n//\r\n//                                 </TouchableHighlight>\r\n//\r\n//                             </TouchableHighlight>\r\n//                         </View>\r\n//\r\n//                     </Modal>\r\n//                 </View>\r\n//\r\n//             </TouchableHighlight>\r\n//         )\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}