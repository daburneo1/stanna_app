{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginForm() {\n  var navigation = useNavigation();\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    validateOnChange: true,\n    onSubmit: function onSubmit(formValue) {\n      console.log(\"Formulario enviado...\");\n      console.log(formValue);\n    }\n  });\n\n  var login = function login() {\n    navigation.navigate('Account');\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Crear nueva cuenta\"\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Nombres\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"user\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            value: formik.values.firstname,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('username', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Apellidos\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"user\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            value: formik.values.lastname,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"C\\xE9dula o Pasaporte\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"hashtag\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            value: formik.values.dni,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Tel\\xE9fono\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Text, {\n            style: styles.prefixNumberBox,\n            children: \"+593\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.numberInput,\n            value: formik.values.phone,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Correo Electr\\xF3nico\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"envelope\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            value: formik.values.email,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Contrase\\xF1a\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"key\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            secureTextEntry: true,\n            value: formik.values.password,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Confirmar Contrase\\xF1a\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(View, {\n          children: _jsx(Icon, {\n            style: styles.iconBox,\n            name: \"key\"\n          })\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: styles.input,\n            secureTextEntry: true,\n            value: formik.values.passwordCheck,\n            onChangeText: function onChangeText(text) {\n              return formik.setFieldValue('password', text);\n            }\n          })\n        })]\n      })]\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: formik.handleSubmit,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.textButton,\n          children: \"Registrarse\"\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 25,\n        alignSelf: \"center\",\n        marginBottom: 20\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          children: \"\\xBFTienes una cuenta? \"\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: login,\n          children: _jsx(Text, {\n            style: styles.registerButtom,\n            children: \"Iniciar sesi\\xF3n\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().required(\"El correo electrónico es obligatorio\").nullable().email(),\n    password: Yup.string().required(\"Debe ingresar la contraseña\"),\n    passwordCheck: Yup.string().oneOf([Yup.ref('password'), null], \"Las contraseñas deben coincidir\")\n  };\n}\n\nfunction initialValues() {\n  return {\n    firstname: \"\",\n    lastname: \"\",\n    dni: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    passwordCheck: \"\"\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 30,\n    marginTop: 30\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  input: {\n    height: 30,\n    width: 300,\n    marginTop: 8,\n    marginBottom: 8,\n    marginRight: 12,\n    borderWidth: 0.7,\n    padding: 10,\n    borderRadius: 10,\n    fontSize: 11\n  },\n  prefixNumberBox: {\n    height: 30,\n    width: 50,\n    marginTop: 8,\n    marginBottom: 8,\n    marginRight: 8,\n    marginLeft: 10,\n    borderWidth: 0.7,\n    padding: 10,\n    borderRadius: 10,\n    fontSize: 10\n  },\n  numberInput: {\n    height: 30,\n    width: 270,\n    marginTop: 8,\n    marginBottom: 8,\n    marginRight: 12,\n    borderWidth: 0.7,\n    padding: 10,\n    borderRadius: 10,\n    fontSize: 11\n  },\n  iconBox: {\n    height: 40,\n    marginLeft: 5,\n    marginTop: 12,\n    padding: 10,\n    borderRadius: 10\n  },\n  text: {\n    marginLeft: 20,\n    fontWeight: \"bold\",\n    color: \"#18395e\"\n  },\n  button: {\n    backgroundColor: \"#18395e\",\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 15\n  },\n  textButton: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\",\n    margin: 7\n  },\n  containerOtherLoginTitle: {\n    alignSelf: \"center\",\n    marginTop: 15\n  },\n  containerLoginAuth: {\n    flexDirection: \"row\",\n    paddingHorizontal: 30,\n    alignSelf: \"center\",\n    marginTop: 20\n  },\n  spacing: {\n    flex: 1,\n    paddingHorizontal: 30\n  },\n  authButtom: {\n    backgroundColor: \"#E1E1E1\",\n    width: 40,\n    height: 40,\n    marginHorizontal: 20,\n    borderRadius: 50\n  },\n  registerButtom: {\n    color: \"#18395e\",\n    fontWeight: \"bold\",\n    marginLeft: 30\n  },\n  error: {\n    textAlign: \"center\",\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/screens/RegisterForm.js"],"names":["React","Icon","useFormik","Yup","useNavigation","LoginForm","navigation","formik","initialValues","validationSchema","object","validateOnChange","onSubmit","formValue","console","log","login","navigate","styles","container","title","card","text","flexDirection","iconBox","input","values","firstname","setFieldValue","lastname","dni","prefixNumberBox","numberInput","phone","email","password","passwordCheck","handleSubmit","button","textButton","marginTop","alignSelf","marginBottom","registerButtom","string","required","nullable","oneOf","ref","StyleSheet","create","marginHorizontal","textAlign","fontSize","fontWeight","height","width","marginRight","borderWidth","padding","borderRadius","marginLeft","color","backgroundColor","margin","textAlignVertical","containerOtherLoginTitle","containerLoginAuth","paddingHorizontal","spacing","flex","authButtom","error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Text, View, StyleSheet, TextInput, Button, Keyboard, Image, TouchableWithoutFeedback, ScrollView} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\n\r\nexport default function LoginForm() {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema()),\r\n        validateOnChange: true,\r\n        onSubmit: (formValue) => {\r\n            console.log(\"Formulario enviado...\")\r\n            console.log(formValue)\r\n        }\r\n    });\r\n\r\n    const login = () => {\r\n        navigation.navigate('Account')\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <Text style={styles.title}>Crear nueva cuenta</Text>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Nombres</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"user\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={formik.values.firstname}\r\n                            onChangeText={(text) => formik.setFieldValue('username', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Apellidos</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"user\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={formik.values.lastname}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Cédula o Pasaporte</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"hashtag\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={formik.values.dni}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Teléfono</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Text style={styles.prefixNumberBox}>+593</Text>\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.numberInput}\r\n                            value={formik.values.phone}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Correo Electrónico</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"envelope\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={formik.values.email}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Contraseña</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"key\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            secureTextEntry={true}\r\n                            value={formik.values.password}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Confirmar Contraseña</Text>\r\n                <View style={{flexDirection: \"row\"}}>\r\n                    <View>\r\n                        <Icon style={styles.iconBox} name=\"key\" />\r\n                    </View>\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            secureTextEntry={true}\r\n                            value={formik.values.passwordCheck}\r\n                            onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <TouchableWithoutFeedback onPress={formik.handleSubmit}>\r\n                <View style={styles.button}>\r\n                    <Text style={styles.textButton}>Registrarse</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n            <View style={{flexDirection: \"row\", marginTop: 25, alignSelf: \"center\", marginBottom: 20}}>\r\n                <View>\r\n                    <Text>¿Tienes una cuenta? </Text>\r\n                </View>\r\n                <View>\r\n                    <TouchableWithoutFeedback onPress={login}>\r\n                        <Text style={styles.registerButtom}>Iniciar sesión</Text>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n            </View>\r\n\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nfunction validationSchema() {\r\n    return{\r\n        email: Yup.string().required(\"El correo electrónico es obligatorio\").nullable().email(),\r\n        password: Yup.string().required(\"Debe ingresar la contraseña\"),\r\n        passwordCheck: Yup.string().oneOf([Yup.ref('password'), null], \"Las contraseñas deben coincidir\")\r\n    }\r\n}\r\n\r\nfunction initialValues() {\r\n    return{\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        dni: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordCheck: \"\"\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginHorizontal: 30,\r\n        marginTop: 30\r\n    },\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: 28,\r\n        fontWeight: \"bold\",\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        height: 30,\r\n        width: 300,\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        marginRight: 12,\r\n        borderWidth: 0.7,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        fontSize: 11\r\n    },\r\n    prefixNumberBox: {\r\n        height: 30,\r\n        width: 50,\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        marginLeft: 10,\r\n        borderWidth: 0.7,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        fontSize: 10,\r\n    },\r\n    numberInput:{\r\n        height: 30,\r\n        width: 270,\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        marginRight: 12,\r\n        borderWidth: 0.7,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        fontSize: 11\r\n    },\r\n    iconBox: {\r\n        height: 40,\r\n        marginLeft: 5,\r\n        marginTop: 12,\r\n        // borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        // marginBottom: 10,\r\n        // textAlignVertical: \"center\"\r\n    },\r\n    text: {\r\n        marginLeft: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#18395e\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#18395e\",\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        marginTop: 15\r\n    },\r\n    textButton: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontWeight: \"bold\",\r\n        margin: 7\r\n    },\r\n    containerOtherLoginTitle: {\r\n        alignSelf: \"center\",\r\n        marginTop: 15\r\n    },\r\n    containerLoginAuth: {\r\n        flexDirection: \"row\",\r\n        paddingHorizontal: 30,\r\n        alignSelf: \"center\",\r\n        marginTop: 20\r\n    },\r\n    spacing: {\r\n        flex: 1,\r\n        paddingHorizontal: 30,\r\n    },\r\n    authButtom: {\r\n        backgroundColor: \"#E1E1E1\",\r\n        width: 40,\r\n        height: 40,\r\n        marginHorizontal: 20,\r\n        borderRadius: 50\r\n    },\r\n    registerButtom: {\r\n        color: \"#18395e\",\r\n        fontWeight: \"bold\",\r\n        marginLeft: 30\r\n    },\r\n    error: {\r\n        textAlign: \"center\",\r\n        color: \"red\"\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}