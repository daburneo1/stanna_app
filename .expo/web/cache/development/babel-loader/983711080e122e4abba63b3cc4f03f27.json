{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { user, userDetails } from \"../../utils/userDB\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var navigation = useNavigation();\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    validateOnChange: true,\n    onSubmit: function onSubmit(formValue) {\n      setError('');\n      var email = formValue.email,\n          password = formValue.password;\n      console.log(email, password);\n\n      if (email !== user.email || password !== user.password) {\n        setError('El correo electrónico o la contraseña son incorrectos');\n      } else {\n        login(userDetails);\n        console.log(\"Login correcto\");\n        console.log(userDetails);\n      }\n    }\n  });\n\n  var registerNewUser = function registerNewUser() {\n    navigation.navigate('RegisterForm');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../assets/Logo_Stanna.png\"),\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Correo Electr\\xF3nico\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: formik.values.email,\n        onChangeText: function onChangeText(text) {\n          return formik.setFieldValue('email', text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Contrase\\xF1a\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        value: formik.values.password,\n        onChangeText: function onChangeText(text) {\n          return formik.setFieldValue('password', text);\n        }\n      })]\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: formik.handleSubmit,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.textButton,\n          children: \"Iniciar Sesi\\xF3n\"\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.error,\n      children: formik.errors.email\n    }), _jsx(Text, {\n      style: styles.error,\n      children: formik.errors.password\n    }), _jsx(Text, {\n      style: styles.error,\n      children: error\n    }), _jsx(View, {\n      style: styles.containerOtherLoginTitle,\n      children: _jsx(Text, {\n        children: \"Otros m\\xE9todos de ingreso\"\n      })\n    }), _jsxs(View, {\n      style: styles.containerLoginAuth,\n      children: [_jsx(View, {\n        children: _jsx(TouchableWithoutFeedback, {\n          children: _jsx(View, {\n            style: styles.buttonLogin,\n            children: _jsx(Image, {\n              source: require(\"../../assets/googleLogo.png\"),\n              style: styles.authButtom\n            })\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableWithoutFeedback, {\n          children: _jsx(View, {\n            style: styles.buttonLogin,\n            children: _jsx(Image, {\n              source: require(\"../../assets/appleLogo.png\"),\n              style: styles.authButtom\n            })\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 25,\n        alignSelf: \"center\"\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          children: \"\\xBFNo tienes una cuenta? \"\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: registerNewUser,\n          children: _jsx(Text, {\n            style: styles.registerButtom,\n            children: \"Registrate\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().required(\"Debe ingresar un correo electrónico\"),\n    password: Yup.string().required(\"Debe ingresar la contraseña\")\n  };\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 30\n  },\n  image: {\n    marginTop: 50,\n    marginBottom: 40,\n    alignSelf: \"center\",\n    height: 100,\n    width: 60\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    marginTop: 30,\n    marginBottom: 15\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  text: {\n    marginLeft: 20,\n    fontWeight: \"bold\",\n    color: \"#18395e\"\n  },\n  button: {\n    backgroundColor: \"#18395e\",\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 15\n  },\n  textButton: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\",\n    margin: 7\n  },\n  containerOtherLoginTitle: {\n    alignSelf: \"center\",\n    marginTop: 15\n  },\n  containerLoginAuth: {\n    flexDirection: \"row\",\n    paddingHorizontal: 30,\n    alignSelf: \"center\",\n    marginTop: 20\n  },\n  spacing: {\n    flex: 1,\n    paddingHorizontal: 30\n  },\n  authButtom: {\n    backgroundColor: \"#E1E1E1\",\n    width: 40,\n    height: 40,\n    marginHorizontal: 20,\n    borderRadius: 50\n  },\n  registerButtom: {\n    color: \"#18395e\",\n    fontWeight: \"bold\",\n    marginLeft: 30\n  },\n  error: {\n    textAlign: \"center\",\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/components/Auth/LoginForm.js"],"names":["React","useState","Icon","useFormik","Yup","useNavigation","user","userDetails","useAuth","AuthContext","LoginForm","error","setError","login","navigation","formik","initialValues","validationSchema","object","validateOnChange","onSubmit","formValue","email","password","console","log","registerNewUser","navigate","styles","container","require","image","card","text","input","values","setFieldValue","handleSubmit","button","textButton","errors","containerOtherLoginTitle","containerLoginAuth","buttonLogin","authButtom","flexDirection","marginTop","alignSelf","registerButtom","string","required","StyleSheet","create","marginHorizontal","marginBottom","height","width","title","textAlign","fontSize","fontWeight","margin","borderWidth","padding","borderRadius","marginLeft","color","backgroundColor","textAlignVertical","paddingHorizontal","spacing","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {Text, View, StyleSheet, TextInput, Button, Keyboard, Image, TouchableWithoutFeedback} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\nimport { user, userDetails } from \"../../utils/userDB\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { AuthContext } from \"../../context/AuthContext\"\r\n\r\nexport default function LoginForm() {\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    const {login} = useAuth();\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object(validationSchema()),\r\n        validateOnChange: true,\r\n        onSubmit: (formValue) => {\r\n            setError('')\r\n            const { email, password } = formValue;\r\n            console.log(email, password)\r\n            if (email !== user.email || password !== user.password){\r\n                setError('El correo electrónico o la contraseña son incorrectos')\r\n            } else {\r\n                login(userDetails)\r\n                console.log(\"Login correcto\")\r\n                console.log(userDetails)\r\n            }\r\n        }\r\n    });\r\n\r\n    const registerNewUser = () => {\r\n        navigation.navigate('RegisterForm')\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image\r\n                source={require('../../assets/Logo_Stanna.png')}\r\n                style={styles.image}\r\n            />\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Correo Electrónico</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    value={formik.values.email}\r\n                    onChangeText={(text) => formik.setFieldValue('email', text)}\r\n                />\r\n            </View>\r\n            <View style={styles.card}>\r\n                <Text style={styles.text}>Contraseña</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    secureTextEntry={true}\r\n                    value={formik.values.password}\r\n                    onChangeText={(text) => formik.setFieldValue('password', text)}\r\n                />\r\n            </View>\r\n            <TouchableWithoutFeedback onPress={formik.handleSubmit}>\r\n                <View style={styles.button}>\r\n                    <Text style={styles.textButton}>Iniciar Sesión</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n            <Text style={styles.error}>{formik.errors.email}</Text>\r\n            <Text style={styles.error}>{formik.errors.password}</Text>\r\n            <Text style={styles.error}>{error}</Text>\r\n            <View style={styles.containerOtherLoginTitle}>\r\n                <Text>Otros métodos de ingreso</Text>\r\n            </View>\r\n            <View style={styles.containerLoginAuth}>\r\n                <View>\r\n                    <TouchableWithoutFeedback>\r\n                        <View style={styles.buttonLogin}>\r\n                            <Image source={require('../../assets/googleLogo.png')} style={styles.authButtom}/>\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n                <View>\r\n                    <TouchableWithoutFeedback>\r\n                        <View style={styles.buttonLogin}>\r\n                            <Image source={require('../../assets/appleLogo.png')} style={styles.authButtom}/>\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n            </View>\r\n            <View style={{flexDirection: \"row\", marginTop: 25, alignSelf: \"center\"}}>\r\n                <View>\r\n                    <Text>¿No tienes una cuenta? </Text>\r\n                </View>\r\n                <View>\r\n                    <TouchableWithoutFeedback onPress={registerNewUser}>\r\n                        <Text style={styles.registerButtom}>Registrate</Text>\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction validationSchema() {\r\n    return{\r\n        email: Yup.string().required(\"Debe ingresar un correo electrónico\"),\r\n        password: Yup.string().required(\"Debe ingresar la contraseña\")\r\n    }\r\n}\r\n\r\nfunction initialValues() {\r\n    return{\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginHorizontal: 30\r\n    },\r\n    image: {\r\n        marginTop: 50,\r\n        marginBottom: 40,\r\n        alignSelf: \"center\",\r\n        height: 100,\r\n        width: 60\r\n    },\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: 28,\r\n        fontWeight: \"bold\",\r\n        marginTop: 30,\r\n        marginBottom: 15\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    text: {\r\n        marginLeft: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#18395e\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#18395e\",\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        marginTop: 15\r\n    },\r\n    textButton: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontWeight: \"bold\",\r\n        margin: 7\r\n    },\r\n    containerOtherLoginTitle: {\r\n        alignSelf: \"center\",\r\n        marginTop: 15\r\n    },\r\n    containerLoginAuth: {\r\n        flexDirection: \"row\",\r\n        paddingHorizontal: 30,\r\n        alignSelf: \"center\",\r\n        marginTop: 20\r\n    },\r\n    spacing: {\r\n        flex: 1,\r\n        paddingHorizontal: 30,\r\n    },\r\n    authButtom: {\r\n        backgroundColor: \"#E1E1E1\",\r\n        width: 40,\r\n        height: 40,\r\n        marginHorizontal: 20,\r\n        borderRadius: 50\r\n    },\r\n    registerButtom: {\r\n        color: \"#18395e\",\r\n        fontWeight: \"bold\",\r\n        marginLeft: 30\r\n    },\r\n    error: {\r\n        textAlign: \"center\",\r\n        color: \"red\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}