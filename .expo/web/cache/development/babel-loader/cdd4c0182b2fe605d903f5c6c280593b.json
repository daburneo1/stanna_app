{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RoomCard from \"./RoomCard\";\nimport RoomFilter from \"./RoomFilter\";\nimport RoomGuests from \"./RoomGuests\";\nimport { getRoomDetailsByUrlApi, getRoomsApi } from \"../navigation/api/stanna\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RoomList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      setRooms = _useState2[1];\n\n  var _useState3 = useState('FECHA'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fecha1 = _useState4[0],\n      setFecha1 = _useState4[1];\n\n  var _useState5 = useState('FECHA2'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fecha2 = _useState6[0],\n      setFecha2 = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      adults = _useState8[0],\n      setAdults = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      childrens = _useState10[0],\n      setChildrens = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      load = _useState12[0],\n      setLoad = _useState12[1];\n\n  var loadRooms = function _callee() {\n    var response, roomsArray, _iterator, _step, room, roomDetails;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(fecha1, fecha2, adults, childrens);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getRoomsApi());\n\n          case 4:\n            response = _context.sent;\n            roomsArray = [];\n            _iterator = _createForOfIteratorHelperLoose(response);\n\n          case 7:\n            if ((_step = _iterator()).done) {\n              _context.next = 15;\n              break;\n            }\n\n            room = _step.value;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(getRoomDetailsByUrlApi(room.url));\n\n          case 11:\n            roomDetails = _context.sent;\n            roomsArray.push({\n              id: roomDetails.id,\n              nombre: roomDetails.nombre,\n              tipo: roomDetails.tipo,\n              imagen: roomDetails.imagen,\n              precio: roomDetails.precio,\n              ranking: roomDetails.ranking,\n              descripcion: roomDetails.descripcion,\n              servicios: roomDetails.servicios,\n              informacion: roomDetails.informacion\n            });\n\n          case 13:\n            _context.next = 7;\n            break;\n\n          case 15:\n            setRooms([].concat(_toConsumableArray(rooms), roomsArray));\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  var loadMore = function loadMore() {\n    loadRooms();\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Generamos las mejores opciones\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginTop: 5\n          },\n          children: [_jsx(Text, {\n            children: \"basado en \"\n          }), _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"tus preferencias\"\n          })]\n        })]\n      })\n    }), _jsx(View, {\n      children: _jsx(RoomFilter, {\n        setFecha1: setFecha1,\n        setFecha2: setFecha2\n      })\n    }), _jsx(View, {\n      children: _jsx(RoomGuests, {\n        setAdults: setAdults,\n        setChildrens: setChildrens\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: loadRooms,\n        children: _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.textButton,\n            children: \"Buscar\"\n          })\n        })\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(FlatList, {\n        data: rooms,\n        showsVerticalScrollIndicator: false,\n        keyExtractor: function keyExtractor(room) {\n          return String(room.id);\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(RoomCard, {\n            room: item,\n            fechaEntrada: fecha1,\n            fechaSalida: fecha2,\n            adults: adults,\n            childrens: childrens\n          });\n        },\n        contentContainerStyle: styles.flatListContentContainer,\n        onEndReached: loadMore,\n        onEndReachedThreshold: 0.1\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    paddingHorizontal: 30,\n    marginTop: -20\n  },\n  flatListContentContainer: {\n    paddingHorizontal: 5,\n    paddingBottom: 400\n  },\n  container: {\n    padding: 2,\n    display: \"flex\",\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: \"#18395e\",\n    borderRadius: 15,\n    width: 120,\n    height: 25,\n    marginHorizontal: \"35%\",\n    marginTop: 10\n  },\n  textButton: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\"\n  },\n  spinner: {\n    marginTop: 20,\n    marginBottom: 60\n  }\n});","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/components/RoomList.js"],"names":["React","useEffect","useState","RoomCard","RoomFilter","RoomGuests","getRoomDetailsByUrlApi","getRoomsApi","RoomList","rooms","setRooms","fecha1","setFecha1","fecha2","setFecha2","adults","setAdults","childrens","setChildrens","load","setLoad","loadRooms","console","log","response","roomsArray","room","url","roomDetails","push","id","nombre","tipo","imagen","precio","ranking","descripcion","servicios","informacion","error","loadMore","styles","header","flexDirection","marginTop","fontWeight","button","textButton","container","String","item","flatListContentContainer","StyleSheet","create","paddingHorizontal","paddingBottom","padding","display","marginBottom","backgroundColor","borderRadius","width","height","marginHorizontal","color","textAlign","textAlignVertical","spinner"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {View, Text, FlatList, StyleSheet, TouchableWithoutFeedback, Pressable, ActivityIndicator} from \"react-native\";\r\n\r\nimport RoomCard from \"./RoomCard\";\r\nimport RoomFilter from \"./RoomFilter\";\r\nimport RoomGuests from \"./RoomGuests\";\r\nimport {getRoomDetailsByUrlApi, getRoomsApi} from \"../navigation/api/stanna\";\r\n\r\nexport default function RoomList() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [fecha1, setFecha1] = useState('FECHA')\r\n    const [fecha2, setFecha2] = useState('FECHA2')\r\n    const [adults, setAdults] = useState(0)\r\n    const [childrens, setChildrens] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         await loadRooms();\r\n    //     })();\r\n    // }, []);\r\n\r\n    const loadRooms = async () => {\r\n        // if (load) {\r\n            try {\r\n                console.log(fecha1, fecha2, adults, childrens)\r\n                const response = await getRoomsApi();\r\n                const roomsArray = []\r\n                for await (const room of response) {\r\n                    const roomDetails = await getRoomDetailsByUrlApi(room.url)\r\n\r\n                    roomsArray.push({\r\n                        id: roomDetails.id,\r\n                        nombre: roomDetails.nombre,\r\n                        tipo: roomDetails.tipo,\r\n                        imagen: roomDetails.imagen,\r\n                        precio: roomDetails.precio,\r\n                        ranking: roomDetails.ranking,\r\n                        descripcion: roomDetails.descripcion,\r\n                        servicios: roomDetails.servicios,\r\n                        informacion: roomDetails.informacion\r\n                    });\r\n                }\r\n\r\n                setRooms([...rooms, ...roomsArray]);\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    const loadMore = () => {\r\n        loadRooms()\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.header}>\r\n                <View>\r\n                    <Text>Generamos las mejores opciones</Text>\r\n                    <View style={{flexDirection: \"row\", marginTop: 5}}>\r\n                        <Text>basado en </Text>\r\n                        <Text style={{fontWeight: 'bold'}}>tus preferencias</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View>\r\n                <RoomFilter setFecha1={setFecha1} setFecha2={setFecha2}/>\r\n            </View>\r\n            <View>\r\n                <RoomGuests setAdults={setAdults} setChildrens={setChildrens}/>\r\n            </View>\r\n            <View>\r\n                <TouchableWithoutFeedback onPress={loadRooms}>\r\n                    <View style={styles.button}>\r\n                        <Text style={styles.textButton}>Buscar</Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n            <View style={styles.container}>\r\n                <FlatList\r\n                    data={rooms}\r\n                    showsVerticalScrollIndicator={false}\r\n                    keyExtractor={(room) => String(room.id)}\r\n                    renderItem={({item}) => <RoomCard\r\n                        room={item}\r\n                        fechaEntrada={fecha1}\r\n                        fechaSalida={fecha2}\r\n                        adults={adults}\r\n                        childrens={childrens}\r\n                    />}\r\n                    contentContainerStyle={styles.flatListContentContainer}\r\n                    onEndReached={loadMore}\r\n                    onEndReachedThreshold={0.1}\r\n                    // ListFooterComponent={\r\n                    //     <ActivityIndicator\r\n                    //         size=\"large\"\r\n                    //         style={styles.spinner}\r\n                    //         color=\"#18395e\"\r\n                    //     />\r\n                    // }\r\n                />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        paddingHorizontal: 30,\r\n        marginTop: -20\r\n    },\r\n    flatListContentContainer: {\r\n        paddingHorizontal: 5,\r\n        paddingBottom: 400\r\n    },\r\n    container: {\r\n        padding: 2,\r\n        display: \"flex\",\r\n        marginBottom: 10\r\n    },\r\n    button: {\r\n        backgroundColor: \"#18395e\",\r\n        borderRadius: 15,\r\n        width: 120,\r\n        height: 25,\r\n        marginHorizontal: \"35%\",\r\n        marginTop: 10\r\n    },\r\n    textButton: {\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    spinner: {\r\n        marginTop: 20,\r\n        marginBottom: 60\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}