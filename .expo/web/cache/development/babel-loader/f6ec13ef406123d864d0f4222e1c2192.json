{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { API_HOST } from \"../../utils/constants\";\nexport function getRoomsApi() {\n  var url, response, result;\n  return _regeneratorRuntime.async(function getRoomsApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          url = API_HOST + \"/rooms\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n}\nexport function getRoomDetailsByUrlApi(url) {\n  var response, result;\n  return _regeneratorRuntime.async(function getRoomDetailsByUrlApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          result = _context2.sent;\n          console.log(result);\n          return _context2.abrupt(\"return\", result);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw _context2.t0;\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n}\nexport function getRoomDetailsApi(id) {\n  var url, response, result;\n  return _regeneratorRuntime.async(function getRoomDetailsApi$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          url = API_HOST + \"/rooms/\" + id;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", result);\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          throw _context3.t0;\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n}\nexport function getRoomServicesApi(url) {\n  var response, result;\n  return _regeneratorRuntime.async(function getRoomServicesApi$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result);\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          throw _context4.t0;\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}","map":{"version":3,"sources":["C:/Users/Davicho/Documents/Proyectos/stanna_app/src/navigation/api/stanna.js"],"names":["API_HOST","getRoomsApi","url","fetch","response","json","result","getRoomDetailsByUrlApi","console","log","getRoomDetailsApi","id","getRoomServicesApi"],"mappings":";AAAA,SAAOA,QAAP;AAEA,OAAO,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOC,UAAAA,GAFP,GAEcF,QAFd;AAAA;AAAA,2CAGsBG,KAAK,CAACD,GAAD,CAH3B;;AAAA;AAGOE,UAAAA,QAHP;AAAA;AAAA,2CAIoBA,QAAQ,CAACC,IAAT,EAJpB;;AAAA;AAIOC,UAAAA,MAJP;AAAA,2CAKQA,MALR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAeC,sBAAf,CAAsCL,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEwBC,KAAK,CAACD,GAAD,CAF7B;;AAAA;AAEOE,UAAAA,QAFP;AAAA;AAAA,2CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGOC,UAAAA,MAHP;AAICE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAJD,4CAKQA,MALR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAeI,iBAAf,CAAiCC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOT,UAAAA,GAFP,GAEgBF,QAFhB,eAEkCW,EAFlC;AAAA;AAAA,2CAGwBR,KAAK,CAACD,GAAD,CAH7B;;AAAA;AAGOE,UAAAA,QAHP;AAAA;AAAA,2CAIsBA,QAAQ,CAACC,IAAT,EAJtB;;AAAA;AAIOC,UAAAA,MAJP;AAAA,4CAKQA,MALR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAeM,kBAAf,CAAkCV,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEwBC,KAAK,CAACD,GAAD,CAF7B;;AAAA;AAEOE,UAAAA,QAFP;AAAA;AAAA,2CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGOC,UAAAA,MAHP;AAAA,4CAIQA,MAJR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import{API_HOST} from \"../../utils/constants\";\r\n\r\nexport async function getRoomsApi(){\r\n    try {\r\n        const url=`${API_HOST}/rooms`;\r\n        const response=await fetch(url);\r\n        const result=await response.json();\r\n        return result;\r\n    }\r\n    catch(error){\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getRoomDetailsByUrlApi(url) {\r\n    try {\r\n        const response = await fetch(url);\r\n        const result = await  response.json()\r\n        console.log(result)\r\n        return result;\r\n    } catch (e){\r\n        throw(e)\r\n    }\r\n}\r\n\r\nexport async function getRoomDetailsApi(id) {\r\n    try {\r\n        const url = `${API_HOST}/rooms/${id}`;\r\n        const response = await fetch(url)\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport async function getRoomServicesApi(url) {\r\n    try {\r\n        const response = await fetch(url);\r\n        const result = await  response.json()\r\n        return result;\r\n    } catch (e){\r\n        throw(e)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}